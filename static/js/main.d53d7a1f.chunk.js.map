{"version":3,"sources":["ThreeEntryPoint.js","SceneManager.js","ThreeContainer.js","Instructions.js","App.js","registerServiceWorker.js","index.js"],"names":["containerElement","canvas","scene","renderer","camera","rot","zoomLevel","materials","rotateAboutPoint","obj","point","axis","theta","pointIsWorld","undefined","parent","localToWorld","position","sub","applyAxisAngle","add","worldToLocal","rotateOnAxis","render","TWEEN","update","requestAnimationFrame","THREE","antialias","setSize","window","innerWidth","innerHeight","addEventListener","aspect","updateProjectionMatrix","document","body","appendChild","domElement","origin","originAxis","i","length","texture","load","material","map","geometry","plane","set","x","y","Math","PI","event","keyCode","which","translateZ","rotation","polarGrid","init","SceneManager","createElement","createCanvas","ThreeContainer","ThreeEntryPoint","this","threeRootElement","ref","element","Component","Instructions","hideInstructions","setState","show","state","onClick","style","divStyle","textStyle","instructionDivStyle","instructionTextStyle","React","color","fontFamily","fontSize","display","flexDirection","margin","padding","backgroundColor","zIndex","width","App","className","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","getElementById","URL","process","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d53d7a1f.chunk.js","sourcesContent":["import SceneManager from './SceneManager'\n\nexport default containerElement => {\n\n  const canvas = createCanvas(document, containerElement)\n  const sceneManager = SceneManager(canvas)\n\n\n  function createCanvas(document, containerElement) {\n    const canvas = document.createElement('canvas')\n    containerElement.appendChild(canvas)\n    return canvas\n  }\n\n  function render() {\n    sceneManager.render()\n  }\n\n  render()\n}\n","import * as THREE from 'three';\nimport TWEEN from '@tweenjs/tween.js'\n\nexport default canvas => {\n\n\n  var scene, renderer, camera;\n  let rot = true;\n  let zoomLevel = 0;\n  let zoomSpeed = 20;\n  let materials = [[],[],[],[]];\n\n//\n  init();\n  render();\n\n  function rotateAboutPoint(obj, point, axis, theta, pointIsWorld){\n    pointIsWorld = (pointIsWorld === undefined)? false : pointIsWorld;\n\n    if(pointIsWorld){\n        obj.parent.localToWorld(obj.position); // compensate for world coordinate\n    }\n\n    obj.position.sub(point); // remove the offset\n    obj.position.applyAxisAngle(axis, theta); // rotate the POSITION\n    obj.position.add(point); // re-add the offset\n\n    if(pointIsWorld){\n        obj.parent.worldToLocal(obj.position); // undo world coordinates compensation\n    }\n\n    obj.rotateOnAxis(axis, theta); // rotate the OBJECT\n}\n\n  function init()\n  {\n      renderer = new THREE.WebGLRenderer( {canvas:canvas, antialias:true} );\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      window.addEventListener('resize', ()=>{\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        camera.aspect = window.innerWidth / window.innerHeight\n        camera.updateProjectionMatrix()\n      })\n\n      document.body.appendChild (renderer.domElement);\n\n      scene = new THREE.Scene();\n\n      let origin = new THREE.Vector3(0,0,0);\n      let originAxis = new THREE.Vector3(0,1,0);\n\n      for (let i = 0; i < materials.length; i++){\n        var texture = new THREE.TextureLoader().load( 'materials/00/00_00.jpg' );\n        let material = new THREE.MeshBasicMaterial( { map: texture } );\n        var geometry = new THREE.PlaneGeometry( 30, 5, 32 );\n        var plane = new THREE.Mesh( geometry, material );\n        plane.position.set (scene.position.x, scene.position.y, -220);\n        scene.add( plane );\n        rotateAboutPoint(plane, origin, originAxis, (i+1) * Math.PI / 8, true);\n      }\n\n\n      camera = new THREE.PerspectiveCamera( 65, window.innerWidth / window.innerHeight, 0.01, 1000 );\n\n      document.addEventListener(\"keydown\", onDocumentKeyDown, false)\n       function onDocumentKeyDown(event) {\n         let keyCode = event.which\n         if (keyCode === 87) {\n           camera.translateZ(-zoomSpeed)\n           zoomLevel += 1;\n           if (zoomLevel === 0){\n             rot = true;\n           } else {\n             rot = false;\n           }\n         } else if (keyCode === 83) {\n           if (zoomLevel > 0){\n             camera.translateZ(zoomSpeed)\n             zoomLevel -=  1;\n           }\n           if (zoomLevel === 0){\n             rot = true;\n           } else {\n             rot = false;\n           }\n         }\n\n         else if (keyCode === 65 && rot) {\n           camera.rotation.y += Math.PI / 8\n         }\n         else if (keyCode === 68 && rot) {\n           camera.rotation.y -= Math.PI / 8\n         }\n       }\n\n      var radius = 1000;\n      var radials = 16;\n      var circles = 20;\n      var divisions = 64;\n\n      var polarGrid = new THREE.PolarGridHelper( radius, radials, circles, divisions);\n      polarGrid.position.set(0, -10, 0);\n      scene.add( polarGrid );\n\n      document.addEventListener(\"click\", returnOrigin);\n\n      function returnOrigin() {\n        camera.translateZ(zoomLevel * zoomSpeed)\n        zoomLevel = 0;\n        rot = true;\n      }\n\n      //TWEEN\n\n      // let posX;\n      // let posY;\n      // let posZ;\n      //\n      // var from = {\n      //   x : camera.position.x,\n      //   y : camera.position.y,\n      //   z : camera.position.z\n      // };\n      //\n      // var to = {\n      //   x : posX,\n      //   y : posY,\n      //   z : posZ\n      // };\n      // var tween = new TWEEN.Tween(from)\n      // .to(to,600)\n      // .easing(TWEEN.Easing.Linear.None)\n      // .onUpdate(function () {\n      //   camera.position.set(this.x, this.y, this.z);\n      //   // camera.lookAt(new THREE.Vector3(0,0,0));\n      // })\n      // // .onComplete(function () {\n      // //   camera.lookAt(new THREE.Vector3(0,0,0));\n      // // })\n      // .start();\n\n  }\n\n  function render()\n  {\n    TWEEN.update();\n    requestAnimationFrame ( render );\n    renderer.render (scene, camera);\n  }\n\n    return{render}\n\n}\n","import React, { Component } from 'react';\nimport ThreeEntryPoint from './ThreeEntryPoint';\n\nexport default class ThreeContainer extends Component {\n  componentDidMount() {\n    ThreeEntryPoint(this.threeRootElement);\n  }\n  render () {\n      return (\n        <div ref={element => this.threeRootElement = element} />\n      );\n  }\n}\n","import React from 'react'\n\nclass Instructions extends React.Component{\n\n  constructor(){\n    super()\n    this.state = {\n      show: true\n    }\n  }\n\n  hideInstructions = () => {\n    this.setState({show: !this.state.show})\n  }\n\n  render(){\n    return(\n      <div onClick={this.hideInstructions}>\n        {this.state.show ? <div style={divStyle}> <strong style={textStyle}>Welcome to Shackleton's Hut</strong>\n        <p style={textStyle}>Use W, A, S and D keys to rotate view and to zoom.</p><div></div>\n        <p style={textStyle}>Click on the screen to return to origin.</p>\n        <p style={textStyle}>Click on the instructions to hide them.</p> </div>  : <div style={instructionDivStyle}><strong style={instructionTextStyle}>Instructions</strong></div>}\n      </div>\n    )\n  }\n}\n\nexport default Instructions\n\nlet textStyle = {\n  color: \"#555\",\n  fontFamily: \"'Roboto Mono', monospace\",\n  fontSize: '0.8em'\n}\n\nlet divStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"absolute\",\n  margin: \"2%\",\n  padding: \"1%\",\n  backgroundColor: '#eee',\n  zIndex: 10,\n  width: \"15%\"\n}\n\nlet instructionTextStyle = {\n  color: \"#000\",\n  fontFamily: \"'Roboto Mono', monospace\",\n  fontSize: '0.8em'\n}\n\nlet instructionDivStyle = {\n  display: \"inline-block\",\n  position: \"absolute\",\n  margin: \"2%\",\n  padding: \"1%\",\n  backgroundColor: '#555',\n  zIndex: 10,\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport ThreeContainer from './ThreeContainer'\nimport Instructions from './Instructions.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Instructions />\n        <ThreeContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}