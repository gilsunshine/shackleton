{"ast":null,"code":"import*as THREE from'three';import OrbitControls from'three-orbitcontrols';import uuidv4 from'uuid/v4';export default(function(canvas){var scene,renderer,camera;var cube;var controls;var last_known_scroll_position=0;var prev_scroll=0;var ticking=false;var theta=0;var camZ=0;//\ninit();render();function init(){renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);window.addEventListener('resize',function(){renderer.setSize(window.innerWidth,window.innerHeight);camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();});document.body.appendChild(renderer.domElement);scene=new THREE.Scene();var cubeGeometry=new THREE.BoxGeometry(10,10,10);var cubeMaterial=new THREE.MeshBasicMaterial({color:0x1ec876});cube=new THREE.Mesh(cubeGeometry,cubeMaterial);cube.position.set(scene.position.x,scene.position.y,-200);scene.add(cube);camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.01,1000);camera.position.z=1000;controls=new OrbitControls(camera,renderer.domElement);controls.enableDamping=true;controls.dampingFactor=0.2;controls.minPolarAngle=Math.PI/2;// radians\ncontrols.maxPolarAngle=Math.PI/2;// radians\ncontrols.enablePan=false;controls.zoomSpeed=4;// controls.enableZoom = false;\ncontrols.enableRotate=false;// controls.enableKeys = true;\n// function doSomething(scroll_pos) {\n//   console.log(\"scroll pos: \" + scroll_pos);\n//     console.log(\"last known scroll pos: \" + prev_scroll);\n//   if (scroll_pos > prev_scroll){\n//     camera.position.z += 100;\n//     console.log(\"greater\");\n//   } else if (scroll_pos < prev_scroll){\n//     camera.position.z -= 100;\n//     console.log(\"les\");\n//   }\n//   prev_scroll = scroll_pos;\n// }\n//\n// window.addEventListener('scroll', function(e) {\n//   last_known_scroll_position = window.scrollY;\n//\n//   if (!ticking) {\n//     window.requestAnimationFrame(function() {\n//       doSomething(last_known_scroll_position);\n//       ticking = false;\n//     });\n//\n//     ticking = true;\n//   }\n// });\ndocument.addEventListener(\"keydown\",onDocumentKeyDown,false);function onDocumentKeyDown(event){var keyCode=event.which;if(keyCode===38){camZ+=100;}else if(keyCode===40){camZ-=100;}else if(keyCode===39){theta+=Math.PI/8;}else if(keyCode===37){theta-=Math.PI/8;}}var radius=1000;var radials=16;var circles=20;var divisions=64;var polarGrid=new THREE.PolarGridHelper(radius,radials,circles,divisions);polarGrid.position.set(0,-10,0);scene.add(polarGrid);}function render(){camera.position.x=15*Math.cos(theta);camera.position.z=15*Math.sin(theta)+camZ;requestAnimationFrame(render);controls.update();renderer.render(scene,camera);}return{render:render};});","map":{"version":3,"sources":["/Users/gils/dev/shackleton/src/SceneManager.js"],"names":["THREE","OrbitControls","uuidv4","canvas","scene","renderer","camera","cube","controls","last_known_scroll_position","prev_scroll","ticking","theta","camZ","init","render","WebGLRenderer","antialias","setSize","window","innerWidth","innerHeight","addEventListener","aspect","updateProjectionMatrix","document","body","appendChild","domElement","Scene","cubeGeometry","BoxGeometry","cubeMaterial","MeshBasicMaterial","color","Mesh","position","set","x","y","add","PerspectiveCamera","z","enableDamping","dampingFactor","minPolarAngle","Math","PI","maxPolarAngle","enablePan","zoomSpeed","enableRotate","onDocumentKeyDown","event","keyCode","which","radius","radials","circles","divisions","polarGrid","PolarGridHelper","cos","sin","requestAnimationFrame","update"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols'\nimport uuidv4 from 'uuid/v4'\n\n\nexport default canvas => {\n\n  var scene, renderer, camera;\n  var cube;\n  var controls;\n  let last_known_scroll_position = 0;\n  let prev_scroll = 0;\n  let ticking = false;\n  let theta = 0;\n  let camZ = 0;\n//\n  init();\n  render();\n\n  function init()\n  {\n      renderer = new THREE.WebGLRenderer( {canvas:canvas, antialias:true} );\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      window.addEventListener('resize', ()=>{\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        camera.aspect = window.innerWidth / window.innerHeight\n        camera.updateProjectionMatrix()\n      })\n\n      document.body.appendChild (renderer.domElement);\n\n      scene = new THREE.Scene();\n\n      var cubeGeometry = new THREE.BoxGeometry (10,10,10);\n      var cubeMaterial = new THREE.MeshBasicMaterial ({color: 0x1ec876});\n      cube = new THREE.Mesh (cubeGeometry, cubeMaterial);\n\n      cube.position.set (scene.position.x, scene.position.y, -200);\n      scene.add (cube);\n\n      camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.01, 1000 );\n\t\t\tcamera.position.z = 1000;\n\n\t\t\tcontrols = new OrbitControls( camera, renderer.domElement );\n\t\t\tcontrols.enableDamping = true;\n\t\t\tcontrols.dampingFactor = 0.2;\n      controls.minPolarAngle = Math.PI/2; // radians\n\t    controls.maxPolarAngle = Math.PI/2; // radians\n      controls.enablePan = false;\n      controls.zoomSpeed = 4;\n      // controls.enableZoom = false;\n      controls.enableRotate = false;\n      // controls.enableKeys = true;\n\n      // function doSomething(scroll_pos) {\n      //   console.log(\"scroll pos: \" + scroll_pos);\n      //     console.log(\"last known scroll pos: \" + prev_scroll);\n      //   if (scroll_pos > prev_scroll){\n      //     camera.position.z += 100;\n      //     console.log(\"greater\");\n      //   } else if (scroll_pos < prev_scroll){\n      //     camera.position.z -= 100;\n      //     console.log(\"les\");\n      //   }\n      //   prev_scroll = scroll_pos;\n      // }\n      //\n      // window.addEventListener('scroll', function(e) {\n      //   last_known_scroll_position = window.scrollY;\n      //\n      //   if (!ticking) {\n      //     window.requestAnimationFrame(function() {\n      //       doSomething(last_known_scroll_position);\n      //       ticking = false;\n      //     });\n      //\n      //     ticking = true;\n      //   }\n      // });\n\n      document.addEventListener(\"keydown\", onDocumentKeyDown, false)\n     function onDocumentKeyDown(event) {\n       let keyCode = event.which\n       if (keyCode === 38 ) {\n         camZ += 100;\n       } else if (keyCode === 40) {\n         camZ -=100;\n       }\n       else if (keyCode === 39) {\n         theta += Math.PI / 8;\n       }\n       else if (keyCode === 37) {\n         theta -= Math.PI / 8;\n       }\n     }\n\n      var radius = 1000;\n      var radials = 16;\n      var circles = 20;\n      var divisions = 64;\n\n      var polarGrid = new THREE.PolarGridHelper( radius, radials, circles, divisions );\n      polarGrid.position.set(0, -10, 0);\n      scene.add( polarGrid );\n\n  }\n\n\n  function render()\n  {\n    camera.position.x = 15 * Math.cos( theta );\n    camera.position.z = 15 * Math.sin( theta ) + camZ;\n    requestAnimationFrame ( render );\n    controls.update();\n    renderer.render (scene, camera);\n  }\n\n    return{render}\n\n}\n"]},"metadata":{},"sourceType":"module"}