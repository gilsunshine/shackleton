{"version":3,"sources":["ThreeEntryPoint.js","SceneManager.js","ThreeContainer.js","Instructions.js","App.js","registerServiceWorker.js","index.js"],"names":["containerElement","canvas","scene","renderer","camera","cube","controls","theta","camZ","render","position","x","Math","cos","z","sin","requestAnimationFrame","update","THREE","antialias","setSize","window","innerWidth","innerHeight","addEventListener","aspect","updateProjectionMatrix","document","body","appendChild","domElement","cubeGeometry","cubeMaterial","color","set","y","add","OrbitControls","enableDamping","dampingFactor","minPolarAngle","PI","maxPolarAngle","enablePan","zoomSpeed","enableRotate","event","keyCode","which","polarGrid","init","SceneManager","createElement","createCanvas","ThreeContainer","ThreeEntryPoint","this","threeRootElement","ref","element","Component","Instructions","hideInstructions","setState","show","state","onClick","style","divStyle","textStyle","instructionDivStyle","instructionTextStyle","React","fontFamily","fontSize","display","flexDirection","margin","padding","backgroundColor","zIndex","width","App","className","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f90f7dab.chunk.js","sourcesContent":["import SceneManager from './SceneManager'\n\nexport default containerElement => {\n\n  const canvas = createCanvas(document, containerElement)\n  const sceneManager = SceneManager(canvas)\n\n\n  function createCanvas(document, containerElement) {\n    const canvas = document.createElement('canvas')\n    containerElement.appendChild(canvas)\n    return canvas\n  }\n\n  function render() {\n    sceneManager.render()\n  }\n\n  render()\n}\n","import * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols'\nimport uuidv4 from 'uuid/v4'\n\n\nexport default canvas => {\n\n  var scene, renderer, camera;\n  var cube;\n  var controls;\n  let last_known_scroll_position = 0;\n  let prev_scroll = 0;\n  let ticking = false;\n  let theta = 0;\n  let camZ = 0;\n//\n  init();\n  render();\n\n  function init()\n  {\n      renderer = new THREE.WebGLRenderer( {canvas:canvas, antialias:true} );\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      window.addEventListener('resize', ()=>{\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        camera.aspect = window.innerWidth / window.innerHeight\n        camera.updateProjectionMatrix()\n      })\n\n      document.body.appendChild (renderer.domElement);\n\n      scene = new THREE.Scene();\n\n      var cubeGeometry = new THREE.BoxGeometry (10,10,10);\n      var cubeMaterial = new THREE.MeshBasicMaterial ({color: 0x1ec876});\n      cube = new THREE.Mesh (cubeGeometry, cubeMaterial);\n\n      cube.position.set (scene.position.x, scene.position.y, -200);\n      scene.add (cube);\n\n      camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.01, 1000 );\n\t\t\tcamera.position.z = 1000;\n\n\t\t\tcontrols = new OrbitControls( camera, renderer.domElement );\n\t\t\tcontrols.enableDamping = true;\n\t\t\tcontrols.dampingFactor = 0.2;\n      controls.minPolarAngle = Math.PI/2; // radians\n\t    controls.maxPolarAngle = Math.PI/2; // radians\n      controls.enablePan = false;\n      controls.zoomSpeed = 4;\n      // controls.enableZoom = false;\n      controls.enableRotate = false;\n      // controls.enableKeys = true;\n\n      // function doSomething(scroll_pos) {\n      //   console.log(\"scroll pos: \" + scroll_pos);\n      //     console.log(\"last known scroll pos: \" + prev_scroll);\n      //   if (scroll_pos > prev_scroll){\n      //     camera.position.z += 100;\n      //     console.log(\"greater\");\n      //   } else if (scroll_pos < prev_scroll){\n      //     camera.position.z -= 100;\n      //     console.log(\"les\");\n      //   }\n      //   prev_scroll = scroll_pos;\n      // }\n      //\n      // window.addEventListener('scroll', function(e) {\n      //   last_known_scroll_position = window.scrollY;\n      //\n      //   if (!ticking) {\n      //     window.requestAnimationFrame(function() {\n      //       doSomething(last_known_scroll_position);\n      //       ticking = false;\n      //     });\n      //\n      //     ticking = true;\n      //   }\n      // });\n\n      document.addEventListener(\"keydown\", onDocumentKeyDown, false)\n     function onDocumentKeyDown(event) {\n       let keyCode = event.which\n       if (keyCode === 38 ) {\n         camZ += 100;\n       } else if (keyCode === 40) {\n         camZ -=100;\n       }\n       else if (keyCode === 39) {\n         theta += Math.PI / 8;\n       }\n       else if (keyCode === 37) {\n         theta -= Math.PI / 8;\n       }\n     }\n\n      var radius = 1000;\n      var radials = 16;\n      var circles = 20;\n      var divisions = 64;\n\n      var polarGrid = new THREE.PolarGridHelper( radius, radials, circles, divisions );\n      polarGrid.position.set(0, -10, 0);\n      scene.add( polarGrid );\n\n  }\n\n\n  function render()\n  {\n    camera.position.x = 15 * Math.cos( theta );\n    camera.position.z = 15 * Math.sin( theta ) + camZ;\n    requestAnimationFrame ( render );\n    controls.update();\n    renderer.render (scene, camera);\n  }\n\n    return{render}\n\n}\n","import React, { Component } from 'react';\nimport ThreeEntryPoint from './ThreeEntryPoint';\n\nexport default class ThreeContainer extends Component {\n  componentDidMount() {\n    ThreeEntryPoint(this.threeRootElement);\n  }\n  render () {\n      return (\n        <div ref={element => this.threeRootElement = element} />\n      );\n  }\n}\n","import React from 'react'\n\nclass Instructions extends React.Component{\n\n  constructor(){\n    super()\n    this.state = {\n      show: true\n    }\n  }\n\n  hideInstructions = () => {\n    this.setState({show: !this.state.show})\n  }\n\n  render(){\n    return(\n      <div onClick={this.hideInstructions}>\n        {this.state.show ? <div style={divStyle}> <strong style={textStyle}>Welcome to Shackleton's Hut</strong>\n        <p style={textStyle}>Click and drag to rotate your view. Click on the instructions to hide them.</p> </div>  : <div style={instructionDivStyle}><strong style={instructionTextStyle}>Instructions</strong></div>}\n      </div>\n    )\n  }\n}\n\nexport default Instructions\n\nlet textStyle = {\n  color: \"#555\",\n  fontFamily: \"'Roboto Mono', monospace\",\n  fontSize: '0.8em'\n}\n\nlet divStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"absolute\",\n  margin: \"2%\",\n  padding: \"1%\",\n  backgroundColor: '#eee',\n  zIndex: 10,\n  width: \"15%\"\n}\n\nlet instructionTextStyle = {\n  color: \"#000\",\n  fontFamily: \"'Roboto Mono', monospace\",\n  fontSize: '0.8em'\n}\n\nlet instructionDivStyle = {\n  display: \"inline-block\",\n  position: \"absolute\",\n  margin: \"2%\",\n  padding: \"1%\",\n  backgroundColor: '#555',\n  zIndex: 10,\n}\n","import React, { Component } from 'react';\n// import './App.css';\nimport ThreeContainer from './ThreeContainer'\nimport Instructions from './Instructions.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Instructions />\n        <ThreeContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}